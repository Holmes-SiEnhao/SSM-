<?xml version="1.0" encoding="utf8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.dao.UserMapper">

    <insert id="addUser" parameterType="user">
        insert into user(id,username,password) values (#{id},#{username},#{password})
    </insert>

    <delete id="removeUser" parameterType="int">
        delete from user where id = #{id}
    </delete>

    <update id="alterInfo" parameterType="map">
        update user
        <set>
            <if test="username!=null">
                username = #{username},
            </if>
            <if test="password!=null">
                password = #{password}
            </if>
        </set>
            where id = #{id}
    </update>

    <select id="queryAll" resultType="user">
        select * from user
    </select>

    <select id="queryUser" parameterType="map" resultType="user">
        select * from user
        <where>
            <choose>
                <when test="id!=null">
                    id = #{id}
                </when>
                <when test="username!=null">
                    and  username = #{username}
                </when>
               <otherwise>
                    and password = #{password}
               </otherwise>
            </choose>
        </where>
    </select>

    <select id="queryForeach" parameterType="map" resultType="user">
        select * from user
        <where>
            <foreach collection="uid" item="id" open="(" close=")" separator="or">
                id = #{id}
            </foreach>
        </where>
    </select>

    <sql id="name-pwd">
        <if test="username!=null">
            and username = #{username}
        </if>
        <if test="password!=null">
            and password = #{password}
        </if>
    </sql>
    <select id="queryAll2" parameterType="map" resultType="user">
        select * from user
        <where>
            <include refid="name-pwd"/>
        </where>
    </select>

    <resultMap id="UserMapper" type="user">
        <result property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
    </resultMap>
    <select id="queryLimit" parameterType="map" resultMap="UserMapper">
        select * from user limit #{startIndex},#{pageSize}
    </select>
    
    <select id="fuzzyQuery" parameterType="String" resultType="user">
    select * from user where username like concat(concat('%',#{username},'%'))
    </select>
</mapper>